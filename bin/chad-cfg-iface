#!/usr/bin/env sh
# Usage:
# cfg_iface	--vlan --subnet 99 --name sales --iface em0 --site 23 \
#		--groups lan --description 'Sales Dept' \
#		--tables dhcp-c,dns-c,ntp-c,wan-c

set -euo pipefail

# parse aguments
while [ ! -z ${1-} ]; do
	case "$1" in
		--vlan)
			typeset vlan='true'
			shift 1
			;;
		--subnet)
			typeset subnet=$2
			shift 2
			;;
		--name)
			typeset name=$2
			shift 2
			;;
		--iface)
			typeset iface=$2
			shift 2
			;;
		--site)
			typeset site=$2
			shift 2
			;;
		--groups)
			typeset groups=$(echo $2 | sed -e 's/,/ /g')
			shift 2
			;;
		--description)
			typeset description=$2
			shift 2
			;;
		--tables)
			typeset tables=$(echo $2 | sed -e 's/,/ /g')
			shift 2
			;;
		*)
			echo "Not recognized: $1" >&2
			exit 1
			;;
	esac
done

# discover environment
: ${vlan:=false}
typeset	iface_cfg="hostname.${iface}"
typeset	ipv4="10.${site}.${subnet}.$(( $RANDOM%199 +1 ))"
typeset	domain=$(	hostname				|
			cut -d '.' -f 2-				)
typeset fqdn="${name}.${domain}"
: ${site:=$(	ifconfig					|
		grep -m 1 'inet 10'				|
		awk '{print $2}'				|
		cut -d '.' -f 2						)}
typeset nameservers=$(	dig "ns.${domain}"			|
			grep "^ns.${domain}"			|
			awk '{ print $NF }'				)
: ${nameservers:=$(	grep "interface:[[:space:]]*10"			\
				'/var/unbound/etc/unbound.conf'	|
			cut -d ' ' -f 2					)}
: ${nameservers:=$(	grep 'nameserver[[:space:]]*10'		\
				'/etc/resolv.conf'		|
			cut -d ' ' -f 2					)}
: ${nameservers:=9.9.9.9}

# set interface to up
grep	-q "^up$"	"/etc/${iface_cfg}"		||
{	touch			"/etc/${iface_cfg}"
	mv	"/etc/${iface_cfg}"	'/tmp'
	sed	-e '1iup'	"/tmp/${iface_cfg}"	"/etc/${iface_cfg}"
}
# if vlan, switch to vlan conf file
! $vlan	||
{	typeset	iface_cfg="hostname.vlan${subnet}"
	# interface
	printf	'%s\n'					\
		"vnetid ${subnet} parent ${iface}"	\
		'up'					\
	>	"/etc/${iface_cfg}"
	typeset	parent_iface="${iface}"
	typeset	iface="vlan${subnet}"
}
# finish configuring interface
printf	'%s\n'				\
	'lladdr random'			\
	"inet ${ipv4}/24"		\
	>>	"/etc/${iface_cfg}"
[ -z ${description-} ]			||
printf	'%s\n'				\
	"description ${description}"	\
	>>	"/etc/${iface_cfg}"

# groups
echo	"group ${name}"			\
	>>	"/etc/${iface_cfg}"
for g in ${groups-}; do
	echo	"group ${g}"			\
		>>	"/etc/${iface_cfg}"
done

# antispoof rule
printf	'%s | %s\n'					\
	"!echo 'antispoof quick log for ${iface}'"	\
	"pfctl -a ${iface} -f -"			\
	>>	"/etc/${iface_cfg}"

# pf tables
for t in ${tables-}; do
	echo	"!pfctl -t ${t} -T add ${iface}:network"	\
		>>	"/etc/${iface_cfg}"
done
sh '/etc/netstart' "${iface}"
printf	'%s\n'	"network for ${iface} configured successfully."	>&2

# dhcpd
printf	'shared-network %s {\n'						\
	"${name}"							\
	>>	'/etc/dhcpd.conf'
printf	'\toption %s %s;\n'						\
	'domain-name'		"\"${name}.${domain}\""			\
	'domain-name-servers'	"$(echo ${nameservers} | sed 's/ /, /')"\
	>>	'/etc/dhcpd.conf'
printf	'\tsubnet 10.%s.%s.0 netmask 255.255.255.0 {\n'			\
	"${site}"	"${subnet}"					\
	>>	'/etc/dhcpd.conf'
printf	'\t\toption %s %s;\n'						\
	'routers'	"${ipv4}"					\
	>>	'/etc/dhcpd.conf'
printf	'\t\trange %s %s;\n'						\
	"10.${site}.${subnet}.200"	"10.${site}.${subnet}.254"	\
	>>	'/etc/dhcpd.conf'
printf	'\t\t}\n\t}\n}\n'						\
	>>	'/etc/dhcpd.conf'
sed -e	'/dhcpd_flags/ { s/$/ '"${iface}"'/; }'	\
	'/etc/rc.conf.local'			\
	>	'/etc/rc.conf.local'
rcctl	enable	dhcpd
rcctl	restart dhcpd
printf	'%s\n'	"dhcp for ${iface} configured successfully."	>&2

# nsd
printf	'zone:\n\tname: "%1$s"\n\tzonefile: "master/%1$s"\n\n'	\
	"${fqdn}"						\
	>>	'/var/nsd/etc/nsd.conf'
# zone file
printf	'$ORIGIN\t\t\t%s.\n$TTL\t4h\n\n'	\
	"${domain}"				\
	>	"/var/nsd/zones/master/${domain}"
printf	'@\tIN\tSOA\t%s. hostmaster.%s. (\n'		\
	"${fqdn}"	"${domain}"			\
	>>	"/var/nsd/zones/master/${domain}"
printf	'\t\t%s\t; %s\n'				\
	"$(date +%y%m%d%H%M)"	'serial'		\
	'1h'			'refresh'		\
	'30m'			'retry'			\
	'7d'			'expire'		\
	>>	"/var/nsd/zones/master/${domain}"
printf	'\t\t%s )\t; %s\n\n'				\
	'1h'	'negative'				\
	>>	"/var/nsd/zones/master/${domain}"
# name servers
printf	'@\tIN\tNS\t%s.\n'				\
	"${fqdn}"					\
	>>	"/var/nsd/zones/master/${domain}"
# records
print	'%s\tIN\t%s\t%s\n'				\
	"${name}"	'A'	"${ipv4}"		\
	>>	"/var/nsd/zones/master/${domain}"
nsd-checkzone	"${domain}"	"/var/nsd/zones/master/${domain}"
rcctl	restart nsd

# unbound
sed -e							\
'/root-hints/ i\
	local-zone: "'"${domain}"'" "transparent"\
	domain-insecure: "'"${domain}"'\
	access-control: '"10.${site}.${subnet}.0/24"' allow\
\
'	'/var/unbound/etc/unbound.conf'			\
	>	'/var/unbound/etc/unbound.conf'
printf	'\nstub-zone:\n\tname: "%s"\n\tstub-addr: %s\n\tstub-no-cache: yes\n' \
	"${domain}"	'127.0.0.1@5678'				\
	>>	'/var/unbound/etc/unbound.conf'
unbound-checkconf
rcctl	restart unbound
printf	'%s\n'	"dns for ${iface} configured successfully."	>&2

# vim: ts=8:sw=8:sts=8:noet:ft=zsh
