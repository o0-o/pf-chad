#!/usr/bin/env sh

set -euo pipefail
set -x

# parse aguments
while [ ! -z ${1-} ]; do
	case "$1" in
		--ip)
			typeset ipv4=$2
			shift 2
			;;
		--mask)
			typeset mask=$2
			shift 2
			;;
		--hop)
			typeset next_hop=$2
			shift 2
			;;
		--iface)
			typeset iface=$2
			shift 2
			;;
		--vlan)
			typeset vlan=$2
			shift 2
			;;
		--description)
			typeset description=$2
			shift 2
			;;
		*)
			echo "Not recognized: $1" >&2
			exit 1
			;;
	esac
done

# set edge/wan interface to up
typeset	iface_cfg="hostname.${iface}"
[ -e "/etc/${iface_cfg}" ]			||
echo	'up'	>	"/etc/${iface_cfg}"
grep	-q "^up$"	"/etc/${iface_cfg}"	||
{	cp	-a	"/etc/${iface_cfg}"	\
			"/tmp/${iface_cfg}"
	sed	-e	'1i\
up\
'	>	"/etc/${iface_cfg}"
}
# if vlan, switch to vlan conf file
[ -z ${vlan-} ]	||
{	typeset	iface_cfg="hostname.vlan${vlan}"
	# interface
	printf	'%s\n'					\
		"vnetid ${vlan} parent ${iface}"	\
		'up'					\
	>	"/etc/${iface_cfg}"
	typeset	parent_iface="${iface}"
	typeset	iface="vlan${vlan}"
}
# finish configuring interface
printf	'%s\n'					\
	'lladdr random'				\
	"inet ${ipv4}/${mask}"			\
	>>	"/etc/${iface_cfg}"
printf	'%s\n'					\
	"description '${description-WAN}'"	\
	>>	"/etc/${iface_cfg}"

# pf
typeset	anchor_iface="filter-50-${iface}"
typeset	bogon_url='https://www.team-cymru.org/Services/Bogons/bogon-bn-agg.txt'
touch	"/etc/pf.anchors/${anchor_iface}"
chmod	600	"/etc/pf.anchors/${anchor_iface}"
# install pf config
cp	-a	'/etc/pf.conf'		\
		'/etc/.pf.conf.default'
cp	-a	"${0%/*}/../etc"	\
		'/'
# antispoof
printf	'%s\n'						\
	''						\
	"antispoof quick log for ${iface}"		\
	>>	"/etc/pf.anchors/${anchor_iface}"
# wan service
printf	'%s\n'								\
	''								\
	'table <wan-c> persist'						\
	'table <bogons> persist file "/etc/pf.tables/bogon-bn-agg.txt"'	\
	''								\
	"block in quick log on ${iface} from <bogons>"			\
	"block out quick log on ${iface} to <bogons>"			\
	''								\
	"pass out log on ${iface} proto { tcp udp icmp } \\"		\
	"from <wan-c> to ! <bogons> nat-to ${iface} modulate state"	\
	>>	"/etc/pf.anchors/${anchor_iface}"
# load anchor
printf	'%s\n'								\
	"!pfctl -a ${anchor_iface} -f /etc/pf.anchors/${anchor_iface}"	\
	>>	"/etc/${iface_cfg}"
# check for bogon changes monthly
printf	'%s\n'								\
	"( cd /tmp; curl -LO ${bogon_url} ) 2> /dev/null"		\
	'diff /tmp/bogon-bn-agg.txt /etc/pf.tables/bogon-bn-agg.txt'	\
	>>	'/etc/monthly.local'
# allow this host to access the internet
printf	'%s\n'					\
	"!pfctl -t wan-c -T add ${iface}"	\
	>>	"/etc/${iface_cfg}"
pfctl	-nf	'/etc/pf.conf'	&&
pfctl	-f	'/etc/pf.conf'

# default gateway
printf	'%s\n'			\
	"${next_hop}"		\
	>	'/etc/mygate'

# use quadnine until a local server is available
printf	'%s\n'				\
	'nameserver 9.9.9.9'		\
	'lookup file bind'		\
	>	'/etc/resolv.conf'

# bring up the network
sh	'/etc/netstart'
ping	-c	4	9.9.9.9

# unbound
cp	-a	'/var/unbound/etc/unbound.conf'	\
		'/etc/examples/unbound.conf'
sed	-e	's/#tls-cert-bundle/tls-cert-bundle/'	\
	-e	'/hide-identity/ i\
	do-not-query-localhost: no\
	local-zone: "10.in-addr.arpa" nodefault\
\
'	'/etc/examples/unbound.conf'			\
	>	'/var/unbound/etc/unbound.conf'
printf	'%s\n'					\
	'forward-zone:'				\
	>>	'/var/unbound/etc/unbound.conf'
printf	'\t%s\n'						\
	'name: "."'						\
	'forward-tls-upstream: yes'				\
	'forward-first: no'					\
	'forward-addr: 9.9.9.9@853#dns.quad9.net'		\
	'forward-addr: 149.112.112.112@853#dns.quad9.net'	\
	'forward-addr: 1.1.1.1@853#cloudflare-dns.com'		\
	'forward-addr: 1.0.0.1@853#cloudflare-dns.com'		\
	>>	'/var/unbound/etc/unbound.conf'
ftp	-S	do					\
	-o	'/var/unbound/db/root.hints'		\
	'https://www.internic.net/domain/named.root'
! unbound-anchor	-a	"/var/unbound/db/root.key" # should exit 1
unbound-checkconf
rcctl	enable	unbound
rcctl	start	unbound

# use local resolver
printf	'%s\n'				\
	'nameserver 127.0.0.1'		\
	'lookup file bind'		\
	>	'/etc/resolv.conf'
sh	'/etc/netstart'
host	quad9.net

# nsd
cp	-a	'/var/nsd/etc/nsd.conf'		\
		'/etc/examples/nsd.conf'
sed	-e				\
	'/^server/ a\
	ip-address: 127.0.0.1@5678\
'					\
	'/etc/examples/nsd.conf'	\
	>	'/var/nsd/etc/nsd.conf'
nsd-checkconf	'/var/nsd/etc/nsd.conf'
rcctl	enable	nsd
rcctl	start	nsd

# enable but do not configure yet
printf	'%s\n'				\
	'authoritative;'		\
	'default-lease-time 1800;'	\
	'max-lease-time 3600;'		\
	>	'/etc/dhcpd.conf'
rcctl	enable dhcpd

# enable packet forwarding
echo	'net.inet.ip.forwarding=1'	>>	'/etc/sysctl.conf'
sysctl	-w	'net.inet.ip.forwarding=1'

# vim: ts=8:sw=8:sts=8:noet:ft=sh
